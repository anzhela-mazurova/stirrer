/*****************************************************************************
* Model: stirrer.qm
* File:  ../include/bsp.h
*
* This code has been generated by QM tool (see state-machine.com/qm).
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*****************************************************************************/
/*${../include::bsp.h} .....................................................*/
#ifndef bsp_h
#define bsp_h

#define BSP_TICKS_PER_SEC    100U

/* frequency of the oscillator */
#define FOSC_HZ    32000000UL
/* instruction cycle clock frequency */
#define FCY_HZ     (FOSC_HZ / 2U)
#define FCY        FCY_HZ
#include <libpic30.h>

/* system clock tick period in CPU clocks / TMR1 prescaler */
#define BSP_TMR1_PERIOD         ((uint16_t)(FCY_HZ/(BSP_TICKS_PER_SEC*8)))

/* Pins */

/* motor controller interface */

// SPI2

// SCLK line
#define SCLK_MASK     _PORTB_RB5_MASK
#define SCLK_TRIS     _TRISB5
#define SCLK_PIN      _LATB5

// MOSI line
#define MOSI_MASK     _PORTB_RB6_MASK
#define MOSI_TRIS     _TRISB6
#define MOSI_PIN      _LATB6

// AL_CS line
#define ALCS_MASK     _PORTB_RB4_MASK
#define ALCS_TRIS     _TRISB4
#define ALCS_PIN      _LATB4

// other pins

// PWM line
#define PWM_MASK     _PORTB_RB7_MASK
#define PWM_TRIS     _TRISB7
#define PWM_PIN      _LATB7

/* Encoder */
//it pays to keep encoder channels together
#define ENCA_MASK     _PORTA_RA0_MASK //Encoder A channel
#define ENCA_TRIS     _TRISA0
#define ENCA_PIN      _RA0
#define ENCA_PULLUP   _CN2PUE
#define ENCA_PULLDN   _CN2PDE

#define ENCB_MASK     _PORTA_RA1_MASK //Encoder B channel
#define ENCB_TRIS     _TRISA1
#define ENCB_PIN      _RA1
#define ENCB_PULLUP   _CN3PUE
#define ENCB_PULLDN   _CN3PDE

#define EBUT_MASK     _PORTB_RB2_MASK //Button on encoder shaft
#define EBUT_TRIS     _TRISB2
#define EBUT_PIN      _RB2
#define EBUT_PULLUP   _CN6PUE

/* Display */
// E line
#define E_MASK     _PORTA_RA2_MASK
#define E_TRIS     _TRISA2
#define E_PIN      _LATA2 // _RA2
// Backlight
#define BL_MASK     _PORTA_RA3_MASK
#define BL_TRIS     _TRISA3
#define BL_PIN      _LATA3

#define DISP_OUT_A (E_MASK | BL_MASK)

//RS Line
#define RS_MASK     _PORTB_RB8_MASK
#define RS_TRIS     _TRISB8
#define RS_PIN      _LATB8
//Data
//B12-B15
#define D4_MASK     _PORTB_RB12_MASK
#define D4_TRIS     _TRISB12
#define D4_PIN      _LATB12

#define D5_MASK     _PORTB_RB13_MASK
#define D5_TRIS     _TRISB13
#define D5_PIN      _LATB13

#define D6_MASK     _PORTB_RB14_MASK
#define D6_TRIS     _TRISB14
#define D6_PIN      _LATB14

#define D7_MASK     _PORTB_RB15_MASK
#define D7_TRIS     _TRISB15
#define D7_PIN      _LATB15

#define DISP_OUT_B (RS_MASK|D4_MASK|D5_MASK|D6_MASK|D7_MASK)

#define DISP_DATA (D4_MASK|D5_MASK|D6_MASK|D7_MASK)

/* Console */
//TX line
#define TX_MASK     _PORTB_RB0_MASK
#define TX_TRIS     _TRISB0
#define TX_PIN      _RB0



void BSP_init(void);

#endif /* bsp_h */
